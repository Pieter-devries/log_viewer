(()=>{"use strict";const e={originalData:[],queryResponse:null,config:null,selectedFieldName:"all",showRowNumbers:!1,filterCaseSensitive:!1,highlightCaseSensitive:!1,isDragging:!1},n={visElement:null,filterInput:null,highlightInput:null,fieldSelectElement:null,logHeaderArea:null,logLinesArea:null,minimapContainer:null,minimapThumb:null,rowNumberCheckbox:null,clearFilterButton:null,clearHighlightButton:null,filterCaseChk:null,highlightCaseChk:null};function i(e,n,t){if(3===e.nodeType){const i=e.nodeValue;if(!i)return!1;const l=i.matchAll(n),r=Array.from(l);if(r.length>0){const n=document.createDocumentFragment();let l=0;for(const e of r){const r=e[0],o=e.index;if(void 0===o)continue;o>l&&n.appendChild(document.createTextNode(i.substring(l,o)));const a=document.createElement("span");a.className=t,a.textContent=r,n.appendChild(a),l=o+r.length}if(l<i.length&&n.appendChild(document.createTextNode(i.substring(l))),!e.parentNode)return console.warn("highlightNode: node.parentNode was null.",{node:e}),!1;try{e.parentNode.replaceChild(n,e)}catch(n){return console.error("highlightNode: Error during replaceChild:",n,{node:e,parent:e.parentNode}),!1}return!0}}else if(1===e.nodeType&&e.childNodes&&!/(script|style)/i.test(e.tagName)&&e.className!==t){const l=Array.from(e.childNodes);let r=!1;for(let e=0;e<l.length;e++)i(l[e],n,t)&&(r=!0);return r}return!1}function t(){if(!n.highlightInput||!n.logLinesArea||!n.minimapContainer)return void console.warn("applyHighlight: Missing required elements.");const t=n.highlightInput.value,l=n.logLinesArea.querySelectorAll(".log-line"),r=n.minimapContainer,o=n.logLinesArea,a="highlight-match";r.querySelectorAll(".minimap-marker").forEach((e=>e.remove()));const s="none"!==r.style.display,d=e.highlightCaseSensitive?"g":"gi",c=t?new RegExp((g=t)?g.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"):"",d):null;var g;const h=document.createDocumentFragment(),p=r.clientHeight,u=Math.max(1,o.scrollHeight);l.forEach(((e,n)=>{const t=e.dataset.originalHtml;if(void 0===t){const n=e.dataset.originalText||e.textContent||"";return void(c?e.innerHTML=n.replace(c,`<span class="${a}">$&</span>`):e.textContent=n)}e.innerHTML=t;let l=!1;if(c)try{l=i(e,c,a)}catch(i){console.error(`ApplyHighlight Error processing line ${n}:`,i);try{e.innerHTML=t}catch(e){console.error("ApplyHighlight: Failed to restore HTML after highlight error",e)}}if(s&&l&&p>0){const n=e.offsetTop/u,i=Math.max(0,Math.min(p-2,n*p));if(!isNaN(i)&&isFinite(i)){const e=document.createElement("div");e.className="minimap-marker",e.style.top=i+"px",h.appendChild(e)}}})),r.appendChild(h)}let l,r,o=null,a=null;function s(e,n,i,t){const l=i-t,r=n>0?e/n*l:0;return Math.max(0,Math.min(r,l))}function d(){if(!n.logLinesArea||!n.minimapContainer||!n.minimapThumb)return;const e=n.logLinesArea,i=n.minimapContainer,t=n.minimapThumb,l=i.clientHeight,r=e.scrollHeight,o=e.clientHeight;if(r<=o||l<=0)return t.style.opacity="0",t.style.height="0px",void(t.style.pointerEvents="none");const a=function(e,n,i){const t=e/n*i;return Math.max(20,t)}(o,r,l),d=r-o,c=s(Math.min(e.scrollTop,d),d,l,a);t.style.height=`${a}px`,t.style.top=`${c}px`,t.style.opacity="1",t.style.pointerEvents="auto"}function c(){e.isDragging||d()}function g(i){if(!(e.isDragging&&n.logLinesArea&&n.minimapContainer&&n.minimapThumb))return;i.preventDefault();const t=n.logLinesArea,l=n.minimapContainer,r=n.minimapThumb,o=l.clientHeight,a=t.scrollHeight,d=t.clientHeight,c=r.offsetHeight,g=l.getBoundingClientRect(),h=i.clientY-g.top,p=o-c,u=a-d;if(p<=0||u<0)return;const m=(h-c/2)/p*u,f=Math.max(0,Math.min(u,m));t.scrollTop=f;const v=s(f,u,o,c);r.style.top=`${v}px`}function h(i){e.isDragging&&(i.preventDefault(),e.isDragging=!1,n.minimapThumb&&n.minimapThumb.classList.remove("dragging"),o&&(window.removeEventListener("mousemove",o),o=null),a&&(window.removeEventListener("mouseup",a),a=null))}function p(i){if(!n.logLinesArea||!n.minimapContainer||!n.minimapThumb)return;i.preventDefault();const t=n.logLinesArea,l=n.minimapContainer,r=n.minimapThumb,s=l.clientHeight,c=t.scrollHeight,p=t.clientHeight;if(c<=p||s<=0)return;const u=l.getBoundingClientRect(),m=i.clientY-u.top,f=r.offsetHeight,v=s-f,b=c-p;if(v>0&&b>=0){const e=(m-f/2)/v*b;t.scrollTop=Math.max(0,Math.min(b,e)),d()}e.isDragging=!0,r.classList.add("dragging"),o&&window.removeEventListener("mousemove",o),a&&window.removeEventListener("mouseup",a),o=g,a=h,window.addEventListener("mousemove",o),window.addEventListener("mouseup",a)}function u(){if(console.log("RenderViz called. Current state:",{showNums:e.showRowNumbers,filterCase:e.filterCaseSensitive,highlightCase:e.highlightCaseSensitive,selectedField:e.selectedFieldName}),[n.visElement,n.logLinesArea,n.logHeaderArea,n.minimapContainer,n.minimapThumb,n.filterInput,n.highlightInput,n.fieldSelectElement,n.rowNumberCheckbox,n.filterCaseChk,n.highlightCaseChk].some((e=>!e))||!e.originalData||!e.queryResponse)return console.warn("RenderViz aborted: Missing critical elements or state data."),void(n.logLinesArea&&(n.logLinesArea.innerHTML='<p style="padding: 5px; color: orange;">Waiting for data or elements...</p>'));const i=n.logLinesArea,l=n.logHeaderArea,r=n.minimapContainer,o=n.rowNumberCheckbox,a=n.filterCaseChk,s=n.highlightCaseChk;o.checked=e.showRowNumbers,a.checked=e.filterCaseSensitive,s.checked=e.highlightCaseSensitive;const c=[...e.queryResponse.fields.dimensions||[],...e.queryResponse.fields.measures||[]];if(0===c.length)return i.innerHTML='<p style="padding: 5px; color: orange;">Query returned no fields to display.</p>',l.innerHTML="",void(r.style.display="none");const g=function(i){var t;if(!n.filterInput)return i;let l=n.filterInput.value;if(!l)return i;e.filterCaseSensitive||(l=l.toLowerCase());const r=e.selectedFieldName,o=(null===(t=e.queryResponse)||void 0===t?void 0:t.fields)?[...e.queryResponse.fields.dimensions||[],...e.queryResponse.fields.measures||[]]:[];if(0===o.length)return i;try{return i.filter((n=>{const i=i=>{var t;const r=n[i.name];let o=null===(t=null==r?void 0:r.value)||void 0===t?void 0:t.toString();return null!=o&&(e.filterCaseSensitive||(o=o.toLowerCase()),o.includes(l))};if("all"===r)return o.some(i);{const e=o.find((e=>e.name===r));return!!e&&i(e)}}))}catch(e){return console.error("Error during data filtering:",e),i}}(e.originalData);console.log(`RenderViz: Rendering ${g.length} rows out of ${e.originalData.length}.`),l.innerHTML="";try{const n=function(n){const i=document.createDocumentFragment();if(e.showRowNumbers){const e=document.createElement("div");e.className="log-header-cell log-row-num-header",e.textContent="#",i.appendChild(e)}return n.forEach(((e,n)=>{if(n>0){const e=document.createElement("div");e.className="log-header-separator",e.textContent="|",i.appendChild(e)}const t=document.createElement("div"),l=e.is_measure?"measure":"dimension";t.className="log-header-cell",t.classList.add(`field-${n}`,`field-type-${l}`),t.textContent=e.label_short||e.label||e.name,t.title=e.label||e.name,i.appendChild(t)})),i}(c);l.appendChild(n)}catch(e){console.error("RenderViz: Error populating headers:",e),l.innerHTML='<div style="color: red; padding: 2px 5px;">Error loading headers</div>'}if(i.innerHTML="",0===g.length){const e=document.createElement("p");e.style.color="orange",e.style.padding="5px",e.textContent=n.filterInput.value?"No logs match filter.":"Query returned no data.",i.appendChild(e),r.style.display="none"}else try{const n=function(n,i){const t=document.createDocumentFragment(),l=new Map;return e.originalData.forEach(((e,n)=>l.set(e,n))),n.forEach((n=>{var r;const o=null!==(r=l.get(n))&&void 0!==r?r:-1;-1===o&&console.warn("Could not find original index for a filtered row.",n);const{element:a}=function(n,i,t){const l=document.createElement("div");l.className="log-line";let r=[];if(e.showRowNumbers){const e=document.createElement("span");e.className="log-row-num";const n=`${t+1}: `;e.textContent=n,l.appendChild(e),r.push(n)}i.forEach(((e,i)=>{var t,o;if(i>0){const e=document.createElement("span");e.className="log-field-separator",e.textContent=" | ",l.appendChild(e),r.push(" | ")}const a=document.createElement("span"),s=e.is_measure?"measure":"dimension";a.classList.add("log-field",`field-${i}`,`field-type-${s}`);const d=n[e.name];let c="[NULL]",g="[NULL]";if(null!=(null==d?void 0:d.value)){g=d.value.toString();try{c=null!==(o=null===(t=null===LookerCharts||void 0===LookerCharts?void 0:LookerCharts.Utils)||void 0===t?void 0:t.htmlForCell(d))&&void 0!==o?o:g}catch(n){console.warn(`Error formatting cell for field ${e.name}:`,n),c=g}}else(null==d?void 0:d.rendered)&&(g=d.rendered,c=d.rendered);a.innerHTML=c,r.push(g),(null==d?void 0:d.links)&&d.links.length>0&&(a.classList.add("drillable"),a.onclick=e=>{"undefined"!=typeof LookerCharts&&LookerCharts.Utils&&LookerCharts.Utils.openDrillMenu?LookerCharts.Utils.openDrillMenu({links:d.links,event:e}):console.error("LookerCharts.Utils.openDrillMenu is not available.")}),l.appendChild(a)}));const o=r.join("");return l.dataset.originalText=o,l.dataset.originalHtml=l.innerHTML,{element:l,text:o}}(n,i,o);t.appendChild(a)})),t}(g,c);i.appendChild(n)}catch(e){console.error("RenderViz: Error during rendering loop:",e),i.innerHTML='<p style="color: red; padding: 5px;">Error rendering data.</p>',r.style.display="none"}requestAnimationFrame((()=>{n.logLinesArea&&n.minimapContainer&&(n.logLinesArea.scrollHeight>n.logLinesArea.clientHeight?(n.minimapContainer.style.display="block",d(),t()):(n.minimapContainer.style.display="none",t()),console.log("RenderViz: Minimap and highlighting updated."))}))}function m(e){n.visElement=e,n.filterInput=e.querySelector("#log-filter-input"),n.highlightInput=e.querySelector("#log-highlight-input"),n.fieldSelectElement=e.querySelector("#log-field-select"),n.logHeaderArea=e.querySelector("#log-header-area"),n.logLinesArea=e.querySelector("#log-lines-area"),n.minimapContainer=e.querySelector("#minimap-container"),n.minimapThumb=e.querySelector("#minimap-thumb"),n.rowNumberCheckbox=e.querySelector("#show-row-numbers-chk"),n.clearFilterButton=e.querySelector("#clear-filter-btn"),n.clearHighlightButton=e.querySelector("#clear-highlight-btn"),n.filterCaseChk=e.querySelector("#filter-case-chk"),n.highlightCaseChk=e.querySelector("#highlight-case-chk");const i=!!(n.logLinesArea&&n.logHeaderArea&&n.rowNumberCheckbox&&n.filterInput&&n.highlightInput&&n.fieldSelectElement&&n.minimapContainer&&n.minimapThumb&&n.clearFilterButton&&n.clearHighlightButton&&n.filterCaseChk&&n.highlightCaseChk);return i||console.error("findElements: One or more critical elements NOT found!",{logLinesArea:!!n.logLinesArea,logHeaderArea:!!n.logHeaderArea,rowNumberCheckbox:!!n.rowNumberCheckbox,filterInput:!!n.filterInput,highlightInput:!!n.highlightInput,fieldSelectElement:!!n.fieldSelectElement,minimapContainer:!!n.minimapContainer,minimapThumb:!!n.minimapThumb,clearFilterButton:!!n.clearFilterButton,clearHighlightButton:!!n.clearHighlightButton,filterCaseChk:!!n.filterCaseChk,highlightCaseChk:!!n.highlightCaseChk}),i}const f={id:"log-viewer-dev",label:"Log Viewer",options:{showRowNumbers:{type:"boolean",label:"Show Row Numbers",default:!1,section:"Display",order:1},filterCaseSensitive:{type:"boolean",label:"Case-Sensitive Filter",default:!1,section:"Filtering & Search",order:1},highlightCaseSensitive:{type:"boolean",label:"Case-Sensitive Search",default:!1,section:"Filtering & Search",order:3}},create:function(i,o){console.log("Log Viewer Vis: Create called");try{if(a=i,console.log("Setting up HTML structure with ORIGINAL layout CSS"),a.innerHTML='\n      <style>\n      /* Base container */\n      .log-viewer-container { background-color: black; color: #ccc; font-family: Menlo, Monaco, Consolas, "Courier New", monospace; height: 100%; position: relative; display: flex; flex-direction: column; overflow: hidden; }\n      /* Controls area */\n      #controls-area { position: relative; z-index: 10; background-color: #1c1c1c; padding: 5px 8px; display: flex; flex-wrap: wrap; align-items: center; gap: 10px; border-bottom: 1px solid #444; margin-bottom: 0; }\n      .control-group { display: flex; align-items: center; gap: 4px; }\n      .control-group label { color: #aaa; font-size: 0.9em; white-space: nowrap; }\n      .control-group input[type="text"], .control-group select { padding: 3px 5px; border: 1px solid #555; background-color: #333; color: #eee; font-size: 0.9em; border-radius: 3px; }\n      #row-number-toggle { order: -1; }\n      #row-number-toggle label { cursor: pointer; user-select: none; }\n      #row-number-toggle input[type="checkbox"] { cursor: pointer; margin-right: 3px; }\n      .input-wrapper { position: relative; display: inline-flex; align-items: center; }\n      .input-wrapper input[type="text"] { padding-right: 18px; }\n      .clear-button { position: absolute; right: 1px; top: 1px; bottom: 1px; border: none; background: transparent; color: #888; cursor: pointer; padding: 0 4px; font-size: 1.1em; line-height: 1; display: none; }\n      .input-wrapper input[type="text"]:not(:placeholder-shown) + .clear-button { display: inline-block; }\n      .clear-button:hover { color: #ccc; }\n      .case-sensitivity-toggle { display: flex; align-items: center; }\n      .case-sensitivity-toggle input[type="checkbox"] { cursor: pointer; margin-right: 3px;}\n      .case-sensitivity-toggle label { color: #aaa; font-size: 0.85em; cursor: pointer; user-select: none; }\n      /* Main Content Area */\n      .main-content-area { display: flex; flex-direction: column; flex-grow: 1; overflow: hidden; box-sizing: border-box; }\n\n      /* --- START ORIGINAL LAYOUT CSS --- */\n\n      /* Header Area */\n      #log-header-area {\n        display: flex;           /* Use flexbox */\n        align-items: baseline;   /* Align text baselines */\n        background-color: #1a1a1a;\n        border-bottom: 1px solid #555;\n        padding: 4px 5px;\n        flex-shrink: 0;          /* Prevent header area itself from shrinking */\n        color: #ddd;\n        font-weight: bold;\n        padding-right: 20px;     /* Space for scrollbar/minimap */\n        box-sizing: border-box;\n        overflow: hidden;        /* Hide potential header overflow */\n      }\n      /* Default header cell style */\n      .log-header-cell {\n        white-space: nowrap;     /* Keep header text on one line */\n        overflow: hidden;        /* Hide overflow */\n        text-overflow: ellipsis; /* Show ellipsis (...) for overflow */\n        min-width: 0;            /* Allow shrinking */\n        padding: 0 2px;          /* Original had 0, added slight padding */\n        /* No explicit flex properties - relies on default flex behavior */\n      }\n      /* Row number header */\n      .log-row-num-header {\n        flex-shrink: 0;          /* Prevent shrinking */\n        margin-right: 8px;       /* Original margin */\n        color: #aaa;\n        user-select: none;\n        font-weight: normal;\n      }\n      /* Special rule for the first field\'s header */\n      .log-header-cell.field-0 {\n        flex-shrink: 0;          /* Prevent the first column header from shrinking */\n      }\n       /* Header separator */\n      .log-header-separator {\n        margin: 0 5px;           /* Original margin */\n        color: #666;\n        flex-shrink: 0;          /* Prevent shrinking */\n        font-weight: normal;\n      }\n\n      /* Log Line styles */\n      .log-line {\n        display: flex;           /* Use flexbox */\n        align-items: baseline;   /* Align text baselines */\n        margin: 0;\n        padding: 2px 5px;\n        border-bottom: 1px dotted #444;\n        color: #ccc;\n        box-sizing: border-box;\n        font-size: 0.9em;        /* Added from previous refinement */\n      }\n      /* Row number in log line */\n      .log-row-num {\n        flex-shrink: 0;          /* Prevent shrinking */\n        margin-right: 8px;       /* Original margin */\n        color: #888;\n        user-select: none;\n        font-size: 0.9em;        /* Match line font size */\n      }\n      /* Default data field style */\n      .log-field {\n        white-space: pre-wrap;   /* Allow wrapping */\n        word-break: break-all;   /* Break long words (original had this) */\n        min-width: 0;            /* Allow shrinking */\n        padding: 0 2px;          /* Added slight padding */\n         /* No explicit flex properties - relies on default flex behavior */\n      }\n      /* Special rule for the first field\'s data */\n      .log-field.field-0 {\n        flex-shrink: 0;          /* Prevent the first column data area from shrinking */\n      }\n      .field-type-measure { /* Optional styling for measures */ }\n      /* Field separator in log line */\n      .log-field-separator {\n        margin: 0 5px;           /* Original margin */\n        color: #666;\n        flex-shrink: 0;          /* Prevent shrinking */\n      }\n\n      /* --- END ORIGINAL LAYOUT CSS --- */\n\n\n      /* Log Scroll Container */\n      .log-scroll-container { display: flex; flex-grow: 1; overflow: hidden; }\n\n      /* Log Lines Area - HIDE SCROLLBAR */\n      #log-lines-area {\n        flex-grow: 1;\n        overflow: auto; /* Keep this for scrollability */\n        box-sizing: border-box;\n        padding-right: 5px; /* Add padding to avoid text hitting minimap */\n        /* --- HIDE DEFAULT SCROLLBAR --- */\n        scrollbar-width: none; /* Firefox */\n        -ms-overflow-style: none; /* IE and Edge */\n      }\n      #log-lines-area::-webkit-scrollbar {\n          display: none; /* WebKit browsers (Chrome, Safari, new Edge) */\n          width: 0; /* Fallback for some older versions */\n          height: 0; /* Fallback for some older versions */\n      }\n      /* --- End HIDE DEFAULT SCROLLBAR --- */\n\n      /* Minimap */\n      #minimap-container { position: relative; width: 15px; background-color: #222; border-left: 1px solid #444; display: none; /* Initially hidden */ box-sizing: border-box; flex-shrink: 0; cursor: pointer; user-select: none; }\n      #minimap-thumb { position: absolute; left: 1px; right: 1px; background-color: rgba(100, 100, 100, 0.5); border-radius: 2px; opacity: 0; transition: opacity 0.2s ease-in-out, background-color 0.2s ease-in-out; cursor: ns-resize; pointer-events: none; /* Initially disabled */ }\n      #minimap-thumb.dragging { background-color: rgba(150, 150, 150, 0.8); /* Darker when dragging */ }\n      #minimap-container:hover #minimap-thumb { opacity: 1; background-color: rgba(150, 150, 150, 0.7); } /* Show on hover */\n      /* Highlight/Marker/Drillable styles (unchanged) */\n      .highlight-match { background-color: yellow; color: black; border-radius: 2px; padding: 0 1px; }\n      .minimap-marker { position: absolute; left: 1px; right: 1px; height: 2px; background-color: rgba(255, 255, 0, 0.7); pointer-events: none; border-radius: 1px; }\n      .drillable { cursor: pointer; text-decoration: underline; text-decoration-color: #555; }\n      .drillable:hover { text-decoration-color: #999; background-color: rgba(255, 255, 255, 0.05); }\n    </style>\n      <div class="log-viewer-container">\n        <div id="controls-area">\n          <div id="row-number-toggle" class="control-group">\n             <input type="checkbox" id="show-row-numbers-chk" />\n             <label for="show-row-numbers-chk">Row&nbsp;#</label> </div>\n          <div class="control-group">\n             <label for="log-field-select">Field:</label>\n             <select id="log-field-select"><option value="all">All Fields</option></select>\n          </div>\n          <div class="control-group">\n             <label for="log-filter-input">Filter:</label>\n             <span class="input-wrapper">\n                <input type="text" id="log-filter-input" placeholder="Filter rows..." />\n                <button id="clear-filter-btn" class="clear-button" title="Clear filter">&times;</button>\n             </span>\n             <span class="case-sensitivity-toggle" title="Case sensitive filter">\n                <input type="checkbox" id="filter-case-chk" />\n                <label for="filter-case-chk">Aa</label>\n             </span>\n          </div>\n          <div class="control-group">\n             <label for="log-highlight-input">Search:</label>\n             <span class="input-wrapper">\n                <input type="text" id="log-highlight-input" placeholder="Highlight text..." />\n                <button id="clear-highlight-btn" class="clear-button" title="Clear search">&times;</button>\n             </span>\n              <span class="case-sensitivity-toggle" title="Case sensitive search">\n                <input type="checkbox" id="highlight-case-chk" />\n                <label for="highlight-case-chk">Aa</label>\n             </span>\n          </div>\n        </div>\n        <div class="main-content-area">\n          <div id="log-header-area"></div>\n          <div class="log-scroll-container">\n             <div id="log-lines-area">\n                <p style="padding: 5px;">Log Viewer Initializing...</p>\n             </div>\n             <div id="minimap-container">\n                <div id="minimap-thumb"></div>\n                </div>\n          </div>\n        </div>\n      </div>\n    ',!m(i))return console.error("Create: Failed to find critical elements."),void(i.innerHTML='<div style="color:red; padding:10px;">Error: Vis init failed (missing elements).</div>');!function(){if(console.log("Attaching event listeners"),[n.filterInput,n.clearFilterButton,n.filterCaseChk,n.highlightInput,n.clearHighlightButton,n.highlightCaseChk,n.logLinesArea,n.minimapContainer,n.fieldSelectElement,n.rowNumberCheckbox].some((e=>!e)))return void console.error("attachListeners: Cannot attach listeners, one or more required elements are missing.");const i=n.filterInput,o=n.clearFilterButton,a=n.filterCaseChk,s=n.highlightInput,d=n.clearHighlightButton,g=n.highlightCaseChk,h=n.logLinesArea,m=n.minimapContainer,f=n.fieldSelectElement,v=n.rowNumberCheckbox;i.addEventListener("input",(()=>{clearTimeout(l),l=window.setTimeout((()=>{console.log("Filter Debounce: Calling renderViz"),u()}),250)})),o.addEventListener("click",(()=>{i.value&&(i.value="",clearTimeout(l),console.log("Clear Filter: Calling renderViz immediately"),u())})),a.addEventListener("change",(n=>{e.filterCaseSensitive=n.target.checked,console.log("Filter Case Change: Calling renderViz"),u()})),s.addEventListener("input",(()=>{clearTimeout(r),r=window.setTimeout((()=>{console.log("Highlight Debounce: Calling applyHighlight"),t()}),150)})),d.addEventListener("click",(()=>{s.value&&(s.value="",clearTimeout(r),console.log("Clear Highlight: Calling applyHighlight immediately"),t())})),g.addEventListener("change",(n=>{e.highlightCaseSensitive=n.target.checked,console.log("Highlight Case Change: Calling applyHighlight"),t()})),h.addEventListener("scroll",c,{passive:!0}),m.addEventListener("mousedown",p),f.addEventListener("change",(n=>{e.selectedFieldName=n.target.value,console.log(`Field Selection Change: New field is "${e.selectedFieldName}". Calling renderViz.`),u()})),v.addEventListener("change",(n=>{e.showRowNumbers=n.target.checked,console.log(`Row Number Toggle Change: Show is ${e.showRowNumbers}. Calling renderViz.`),u()})),console.log("Event listeners attached successfully.")}(),console.log("Log Viewer Vis: Create finished successfully.")}catch(e){console.error("Error during visualization creation:",e),i.innerHTML=`<div style="color:red; padding:10px;">Error: Vis init failed. ${e instanceof Error?e.message:String(e)}</div>`}var a},updateAsync:function(i,t,l,r,o,a){console.log("Log Viewer Vis: updateAsync called");try{if(s=i,d=r,c=l,console.log("Updating core state with new data and config:",c),e.originalData=s||[],e.queryResponse=d,e.config=c,e.showRowNumbers=null!==(g=null==c?void 0:c.showRowNumbers)&&void 0!==g&&g,e.filterCaseSensitive=null!==(h=null==c?void 0:c.filterCaseSensitive)&&void 0!==h&&h,e.highlightCaseSensitive=null!==(p=null==c?void 0:c.highlightCaseSensitive)&&void 0!==p&&p,console.log("Core state after update:",{showRowNumbers:e.showRowNumbers,filterCaseSensitive:e.filterCaseSensitive,highlightCaseSensitive:e.highlightCaseSensitive,dataLength:e.originalData.length}),console.log("Log Viewer Vis: Core state updated with config:",l),!m(t))return console.error("updateAsync: Failed to find critical elements during update."),n.logLinesArea?n.logLinesArea.innerHTML='<p style="color:red; padding:10px;">Error: Vis update failed (missing elements).</p>':t.innerHTML='<div style="color:red; padding:10px;">Error: Vis update failed (missing elements).</div>',void a();(null==r?void 0:r.fields)?v(r.fields.dimensions||[],r.fields.measures||[]):(console.warn("updateAsync: queryResponse.fields is missing or empty."),v([],[])),u(),console.log("Log Viewer Vis: renderViz called after state update.")}catch(e){console.error("Error during visualization update:",e),n.logLinesArea?n.logLinesArea.innerHTML=`<p style="color:red; padding:10px;">Error: Vis update failed. ${e instanceof Error?e.message:String(e)}</p>`:t.innerHTML=`<div style="color:red; padding:10px;">Error: Vis update failed. ${e instanceof Error?e.message:String(e)}</div>`}finally{console.log("Log Viewer Vis: updateAsync finished."),a()}var s,d,c,g,h,p}};function v(i,t){if(!n.fieldSelectElement)return void console.error("updateFieldDropdown: fieldSelectElement is null.");const l=n.fieldSelectElement,r=e.selectedFieldName;l.innerHTML="";const o=document.createElement("option");o.value="all",o.textContent="All Fields",l.appendChild(o);const a=[...i||[],...t||[]];a.forEach((e=>{if(!e||!e.name)return;const n=document.createElement("option");n.value=e.name,n.textContent=e.label_short||e.label||e.name,l.appendChild(n)}));const s=a.some((e=>e.name===r))?r:"all";l.value=s,e.selectedFieldName!==s&&(console.log(`updateFieldDropdown: Selected field changed from "${r}" to "${s}"`),e.selectedFieldName=s)}looker.plugins.visualizations.add(f)})();